steps:
  # Retrieve secrets from Secret Manager
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud secrets versions access latest --secret=earthdata-username > /workspace/earthdata_username.txt
        gcloud secrets versions access latest --secret=earthdata-password > /workspace/earthdata_password.txt
        gcloud secrets versions access latest --secret=db-password > /workspace/db_password.txt

  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/tempo-pipeline:v1', '.']

  # Push the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/tempo-pipeline:v1']

  # Deploy API endpoint to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'tempo-api'
      - '--image'
      - 'gcr.io/$PROJECT_ID/tempo-pipeline:v1'
      - '--region'
      - 'us-central1'
      - '--allow-unauthenticated'
      - '--command'
      - './start.sh'
      - '--set-env-vars'
      - 'DB_HOST=${_DB_HOST},DB_PORT=${_DB_PORT},DB_USER=${_DB_USER},DB_PASS=Tempo_P@ss2443,DB_NAME=${_DB_NAME},REDIS_HOST=${_REDIS_HOST},REDIS_PORT=${_REDIS_PORT}'

  # Delete existing job if it exists (ignore errors)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run jobs delete tempo-pipeline-job --region=us-central1 --quiet || echo "Job tempo-pipeline-job does not exist, continuing..."

  # Create Cloud Run job for pipeline execution
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'jobs'
      - 'create'
      - 'tempo-pipeline-job'
      - '--image'
      - 'gcr.io/$PROJECT_ID/tempo-pipeline:v1'
      - '--region'
      - 'us-central1'
      - '--memory'
      - '4Gi'
      - '--set-env-vars'
      - 'DB_HOST=${_DB_HOST},DB_PORT=${_DB_PORT},DB_USER=${_DB_USER},DB_PASS=Tempo_P@ss2443,DB_NAME=${_DB_NAME},REDIS_HOST=${_REDIS_HOST},REDIS_PORT=${_REDIS_PORT},RUN_PIPELINE=true'
      - '--command'
      - './start.sh'

  # Delete existing scheduler job if it exists (ignore errors)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud scheduler jobs delete tempo-hourly-pipeline --location=us-central1 --quiet || echo "Scheduler job tempo-hourly-pipeline does not exist, continuing..."

  # Create Cloud Scheduler job for hourly pipeline execution
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'scheduler'
      - 'jobs'
      - 'create'
      - 'http'
      - 'tempo-hourly-pipeline'
      - '--schedule'
      - '0 * * * *'
      - '--uri'
      - 'https://us-central1-run.googleapis.com/apis/run.googleapis.com/v1/namespaces/$PROJECT_ID/jobs/tempo-pipeline-job:run'
      - '--http-method'
      - 'POST'
      - '--oauth-service-account-email'
      - '336045066613-compute@developer.gserviceaccount.com'
      - '--location'
      - 'us-central1'